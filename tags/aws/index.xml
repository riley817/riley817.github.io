<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>aws - Tag - Riley&#39;s DevLog</title>
        <link>https://riley817.github.io/tags/aws/</link>
        <description>aws - Tag - Riley&#39;s DevLog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>riley0422@icloud.com (Riley)</managingEditor>
            <webMaster>riley0422@icloud.com (Riley)</webMaster><lastBuildDate>Sun, 14 Aug 2022 16:14:49 &#43;0900</lastBuildDate><atom:link href="https://riley817.github.io/tags/aws/" rel="self" type="application/rss+xml" /><item>
    <title>AWS Identity and Access Management</title>
    <link>https://riley817.github.io/aws-iam-advanced/</link>
    <pubDate>Sun, 14 Aug 2022 16:14:49 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/aws-iam-advanced/</guid>
    <description><![CDATA[STS - Security Token Service AWS 리소스에 대한 제한적이고 일시적인 액세스 권한을 허용 토큰은 1 시간까지 유효 (새로고침 필요) STS API STS API 설명 AssumeRole - 개인 계정 내에서: 보안을 강화하기 위해 사용 - 계정 간 : 대상 계정에 역할을 수임하여 작업을 수행 AssumeRoleWithSAML - SAML으로 로그인한 사용자의 자격증명을 반환 AssumeRoleWithWebIdentity - IdP(Identity Provider - Facebook Login, Google Login, OIDC Compatible&hellip;) 로그인 사용자의 자격증명을 반환 - 이것보다는 AWS Cognito 추천함 GetSessionToken - AWS 루트 계정 또는 사용자에 대한 MFA 인증 STS를 통해 역할을 수임받기 IAM 계정 내 혹은 계정 간 IAM 역할(Role)을 정의한다.]]></description>
</item>
<item>
    <title>AWS IAM</title>
    <link>https://riley817.github.io/archives/devops/aws/aws/aws-iam/</link>
    <pubDate>Sun, 17 Jul 2022 18:27:40 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/archives/devops/aws/aws/aws-iam/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/posts/images/aws/aws-logo.png" referrerpolicy="no-referrer">
            </div>IAM:Identity and Access Management Global Service로 리전 상관없이 설정함 사용자Users는 조직내 사용자이며 그룹화 할 수 있다. 그룹Group는 오직 사용자users만 포함할 수 있고 다른 그룹은 포함할 수 없다. 사용자는 그룹에 속하지 않을수도 있고 여러 그룹에 속할 수도 있다. Permissions AWS 서비스 및 리소스를 액세스하고 사용하도록 허용하기 위해서는 권한을 부여해야한다. 사용자 또는 그룹에 정책policies이라고 하는 JSON 문서를 지정하게 된다. 정책은 사용자의 권한permissions을 정의한다. AWS에서는 최소 권한 원칙(least privilege principle)을 적용한다. 사용자에게 필요 이상의 권한을 부여하지 않는 것을 권장한다.]]></description>
</item>
<item>
    <title>AWS Overview</title>
    <link>https://riley817.github.io/archives/devops/aws/aws/aws-regions-az/</link>
    <pubDate>Sun, 17 Jul 2022 17:23:55 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/archives/devops/aws/aws/aws-regions-az/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/posts/images/aws/aws-logo.png" referrerpolicy="no-referrer">
            </div>Global Infrastructure Note AWS Regions AWS Availability Zones AWS Data Centers AWS Edge Locations / Points of Presence AWS Regions 데이터 센터의 집합 cluster of data centers 대부분의 AWS 서비스들은 특정 리전에 국한region-scoped되어 있다. 각 Region은 최소 두 개 이상의 개별 가용 영역Availability Zones로 구성 AWS Region을 선택하는 방법 Compliance with data governance and legal requirements : 데이터의 법률 준수 및 요구사항 Proximity to customers: : 고객과의 접근성. 대기시간 단축 Available services within a Region : 특정 리전에서만 가능한 AWS 서비인지 확인 Pricing : 비용은 지역에 따라 가격이 다르다.]]></description>
</item>
<item>
    <title>AWS Elastic Compute Cloud (EC2)</title>
    <link>https://riley817.github.io/aws-ec2/</link>
    <pubDate>Wed, 13 Jul 2022 01:10:49 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/aws-ec2/</guid>
    <description><![CDATA[Amazon EC2 EC2는 AWS에서 제공하는 가장 인기있는 서비스 Elastic Compute Cloud = Infrastructure as a service 구성할 수 있는 기능 가상 머신 임대 (EC2) 가상 드라이브에 데이터를 저장 (EBS) 시스템 간 부하 분산 (ELB) auto-scaling group(ASG)를 사용하여 서비스 확장 EC2 sizing &amp; configuration options Operating System(OS) : Linux, Windows or Mac OS 컴퓨터 성능과 코어양 선택 가능 (CPU) random-access memory (RAM) 스토리지 용량 Network-attached (EBS &amp; EFS) hardware (EC2 Instance Store) Network card: 네트워크 카드 속도, 공용 IP 주소 방화벽 규칙 : security group Bootstrap script (configure at first launch): EC2 User Data EC2 User Data EC2 User Data를 사용하여 인스턴스를 부트스트랩 가능 bootstrapping이란 머신을 시작할 때 명령을 실행하는 것을 의미한다.]]></description>
</item>
<item>
    <title>AWS Identity and Access Management</title>
    <link>https://riley817.github.io/aws-iam/</link>
    <pubDate>Wed, 13 Jul 2022 01:10:49 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/aws-iam/</guid>
    <description><![CDATA[Users &amp; Groups IAM = Identity and Access Management → Global 서비스 Root 계정으로 생성 Users 는 조직의 사용자이며 그룹으로 묶을 수 있다. Groups는 user를 포함할 수 있고 다른 그룹은 포함할 수 없다. user는 여러 그룹에 속할 수 있다. Permissions Users or Groups 은 JSON 문서형태로 정책을 할당 정책 polices는 사용자의 permissions을 정의 AWS에서는 최소 권한 원칙을 적용한다 → 사용자가 필요로 하는 것보다 더 많은 권한을 부여하지 않는다. IAM Policies inheritance 인라인 정책 : 그룹에 속해있지 않아도 정책을 바로 사용자에게 연결 가능 IAM Policies Structure 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 { &#34;Version&#34;: &#34;2012-10-17&#34;, &#34;Statement&#34;: [ { &#34;Effect&#34;: &#34;Allow&#34;, &#34;Action&#34;: &#34;ec2:Describe*&#34;, &#34;Resource&#34;: &#34;*&#34; }, { &#34;Effect&#34;: &#34;Allow&#34;, &#34;Action&#34;: &#34;elasticloadbalancing:Describe*&#34;, &#34;Resource&#34;: &#34;* }, { &#34;Effect&#34;: &#34;Allow&#34;, &#34;Action&#34;: [ &#34;cloudwatch:ListMetrics&#34;, &#34;cloudwatch:GetMetricStatistics&#34;, &#34;cloudwatch:Describe*&#34; ], &#34;Resource&#34;: &#34;*&#34; } ] } 요소 Version : 정책 버전 Id : 정책을 식별할 수 있는 식별자 - 옵션 Statement : 하나 혹은 여러개 (필수사항) Statements 요소 Sid : statement 의 식별자 (옵션) Effect : 특정 statement에 접근은 허용 여부 (Allow 또는 Deny)를 나타냄 Principal : 정책이 적용 될 대상 (계정, 사용자, 역할) Action : 정책의 허용 또는 거부되는 호출 리스트 목록 Resource : 정책이 적용될 리소스 목록 Condition : statement가 언제적용될지 결정 (옵션) IAM Password Policy 강력한 비밀번호 → 계정에 대한 높은 보안 AWS에서는 설정가능한 패스워드 정책 패스워드 최소 길이 특수문자 포함 필수 입력 : 대소문자, 숫자, 특수문자 IAM 계정 사용자들의 패스워드 변경 허용 또는 금지 패스워드 만료 지정 패스워드 재사용 금지 MFA - Multi Factor Authentication MFA = 패스워드(사용자만 알고있는) + 보안 장비(사용자가 소유하고 있는) MFA devices options in AWS Virtual MFA device 하나의 디바이스에서 여러 토큰을 지원 Google Authenticator → phone only Authy → Multi device Universal 2nd Factor(U2F) Security Key YubiKey 하나의 키로 루트 그리고 IAM 사용자 지원 기타 Hardware Key Fob MFA Device Hardware Key Fob MFA Device for AWS GovCloud (US) AWS 액세스 하는 방법 AWS 액세스하는 방법 AWS Management Console : 패스워드 + MFA 사용 AWS Command Line Interface CLI : access key 사용 AWS Software Developer Kit SDK : access key 사용 Access Key는 AWS 콘솔을 통해 생성할 수 있다.]]></description>
</item>
<item>
    <title>[AWS EKS] 5. 인그레스 컨트롤러 만들기</title>
    <link>https://riley817.github.io/archives/devops/aws/aws-5-ingress-controller/</link>
    <pubDate>Sun, 08 May 2022 00:13:03 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/archives/devops/aws/aws-5-ingress-controller/</guid>
    <description><![CDATA[☁️ Amazon EKS 웹 애플리케이션 구축하기 워크샵을 실습한 내용입니다.
☁️ AWS Workshop 링크 : https://catalog.us-east-1.prod.workshops.aws/workshops/9c0aa9ab-90a9-44a6-abe1-8dff360ae428/ko-KR/
인그레스 Ingress 클러스터 내의 서비스에 대한 외부 요청을 어떻게 처리할 것인지 네트워크 7계층 레벨에서 정의하는 쿠버네티스 오브젝트이다.
인그레스 오브젝트의 기본 기능은 다음과 같다.
외부 요청의 라우팅 : 특정 경로로 들어온 요청을 어떤 서비스로 전달할지 정의하는 라우터 규칙 설정 가상 호스트 기반의 요청 처리 : 같은 IP에 대해 다른 도메인 이름으로 요청했을 때 어떻게 처리할 것인지 정의 SSL/TLS 보안 연결 처리 : 요청을 라우팅 할 때, 보안 연결을 위한 인증서 적용 인그레스를 사용하는 이유 쿠버네티스 서비스 타입 중 NodePort 혹은 LoadBalancer 타입의 서비스를 사용해도 외부로 노출할 수 있지만, 인그레스 없이 서비스를 사용할 경우 SSL/TLS 보안 연결 등의 상세 옵션을 각각의 서비스와 디플로이먼트에 대해 일일이 설정을 해야 한다.]]></description>
</item>
<item>
    <title>[AWS EKS] 4. Amazon ECR 에 이미지 올리기</title>
    <link>https://riley817.github.io/archives/devops/aws/aws-4-ecr/</link>
    <pubDate>Sat, 07 May 2022 23:00:58 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/archives/devops/aws/aws-4-ecr/</guid>
    <description><![CDATA[☁️ Amazon EKS 웹 애플리케이션 구축하기 워크샵을 실습한 내용입니다.
☁️ AWS Workshop 링크 : https://catalog.us-east-1.prod.workshops.aws/workshops/9c0aa9ab-90a9-44a6-abe1-8dff360ae428/ko-KR/
Amazon ECR 리포지토리 생성 및 이미지 올리기 Amazon ECR(Elastic Container Registry) 은 도커 컨테이너의 이미지를 저장하는 Repository 서비스이다. Docker hub의 기능과 동일하다.
AWS CLI로 이미지 리포지토리 생성 1 2 3 4 aws ecr create-repository \ --repository-name demo-flask-backend \ --image-scanning-configuration scanOnPush=true \ --region ap-northeast-2 명령어가 수행되면 리포지토리에 대한 정보가 출력되며 Amazon ECR 콘솔창에서도 생성된 리포지토리를 확인할 수 있다.]]></description>
</item>
<item>
    <title>[AWS EKS] 3. EKS Cluster 생성하기</title>
    <link>https://riley817.github.io/archives/devops/aws/aws-3-eks-cluster/</link>
    <pubDate>Fri, 06 May 2022 23:10:03 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/archives/devops/aws/aws-3-eks-cluster/</guid>
    <description><![CDATA[☁️ Amazon EKS 웹 애플리케이션 구축하기 워크샵을 실습한 내용입니다.
☁️ AWS Workshop 링크 : https://catalog.us-east-1.prod.workshops.aws/workshops/9c0aa9ab-90a9-44a6-abe1-8dff360ae428/ko-KR/
Amazon EKS 클러스터는 다양한 방식으로 배포할 수 있다.
AWS 콘솔 창으로 배포 AWS CloudFormation 혹은 AWS CDK 와 같은 IaC(Infrastructure as Code) 도구를 사용해 배포 EKS의 공식 CLI인 eksctl 로 배포 Terraform, Pulumi, Rancher 등으로 배포 eksctl로 Cluster 생성하기 아무 옵션없이 eksctl create cluster 실행하면 default parameter로 클러스터가 배포된다. 그러나 yaml 파일로 작성한 구성 파일을 작성하여 배포하면 구성파일에 명시한 오브젝트들의 바라는 상태(desired state)를 쉽게 파악하고 관리할 수 있는 이점이 있다.]]></description>
</item>
<item>
    <title>[AWS EKS] 2. AWS CLI, eksctl, kubectl 설치 및 설정</title>
    <link>https://riley817.github.io/archives/devops/aws/aws-2-cli/</link>
    <pubDate>Thu, 05 May 2022 22:47:55 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/archives/devops/aws/aws-2-cli/</guid>
    <description><![CDATA[☁️ Amazon EKS 웹 애플리케이션 구축하기 워크샵을 실습한 내용입니다.
☁️ AWS Workshop 링크 : https://catalog.us-east-1.prod.workshops.aws/workshops/9c0aa9ab-90a9-44a6-abe1-8dff360ae428/ko-KR/ ☁️ 워크샵에는 Cloud9을 구축했지만 나는 따로 구축하지는 않았다&hellip;
AWS CLI AWS CLI 설치하기 (Mac OS) AWS Command Line Interface는 command-line shell 명령어를 사용하여 AWS 서비스의 EC2, VPC 등과 같은 AWS의 리소스를 프로비저닝 할 수 있다.
Mac OS는 pkg 파일을 다운로드 하여 설치한다.
Mac OS : https://awscli.amazonaws.com/AWSCLIV2.pkg 다른 OS에서 AWS CLI 설치하기 1 2 3 $ aws --version aws-cli/2.]]></description>
</item>
<item>
    <title>[AWS EKS] (Optional) AWS Cloud9으로 실습 환경 구축하기</title>
    <link>https://riley817.github.io/archives/devops/aws/aws-eks-cloud9/</link>
    <pubDate>Thu, 05 May 2022 22:00:00 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/archives/devops/aws/aws-eks-cloud9/</guid>
    <description><![CDATA[☁️ Amazon EKS 웹 애플리케이션 구축하기 실습 내용입니다.
☁️ AWS Workshop 링크 :
https://catalog.us-east-1.prod.workshops.aws/workshops/9c0aa9ab-90a9-44a6-abe1-8dff360ae428/ko-KR/ AWS Cloud9 AWS Cloud9 은 브라우저만으로 코드를 작성, 실행 및 디버깅할 수 있는 IDE(통합개발환경)이다. 코드 편집기, 디버거 및 터미널 기능을 포함하고 있고 프로그래밍 언어를 위한 필수 도구가 사전에 패키징 되어 제공된다.
AWS Cloud9 시작하기 AWS Cloud9 IDE 구성 AWS Cloud9 콘솔 접속 후 Create environment 버튼 클릭
IDE의 Environment 이름 및 설명을 작성한다. 인스턴스 타입을 t3.]]></description>
</item>
</channel>
</rss>
