<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>git - Tag - Riley&#39;s DevLog</title>
        <link>https://riley817.github.io/tags/git/</link>
        <description>git - Tag - Riley&#39;s DevLog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>riley0422@icloud.com (Riley)</managingEditor>
            <webMaster>riley0422@icloud.com (Riley)</webMaster><lastBuildDate>Sun, 24 May 2020 20:07:22 &#43;0900</lastBuildDate><atom:link href="https://riley817.github.io/tags/git/" rel="self" type="application/rss+xml" /><item>
    <title>git submodule 삭제하기</title>
    <link>https://riley817.github.io/git-submodule/</link>
    <pubDate>Sun, 24 May 2020 20:07:22 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/git-submodule/</guid>
    <description><![CDATA[git submodule 삭제하기 1. .gitmodules를 열어 해당 서브 모듈이 정의된 부분을 제거하거나 파일을 지운다. .gitmodules에 불필요한 모듈만 제거하거나 .gitmodules 파일이 불필요하다면 아예 삭제해 버린다. 2. .git/config 파일을 열어 불필요한 서브 모듈을 삭제한다. 1 vi PROJECT_ROOT/.git/config 3. 해당 저장소의 캐시를 제거한다. 1 2 # git rm --cached path_to_submodule git rm --cached spring-module-common 4. .git/modules/path_to_submodule 파일을 삭제한다. 1 2 cd PROJECT_ROOT/.git/modules rm --rf spring-module-common 5. 변경된 사항을 커밋 한다. 참고 https://git.wiki.kernel.org/index.php/GitSubmoduleTutorial#Removal ]]></description>
</item>
<item>
    <title>gitignore 적용하기</title>
    <link>https://riley817.github.io/git-ignore/</link>
    <pubDate>Mon, 11 May 2020 22:59:31 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/git-ignore/</guid>
    <description><![CDATA[.gitignore .gitignore에 의도적으로 추적을 원하지 않는 파일을 무시하도록 지정할 수 있다. 그러나 git이 이미 추적을 한 파일은 영향을 받지 않는다. 이미 한번 추적이 된 파일을 .gitignore 파일에 적용하려면 아래와 같이 캐시를 삭제해 주어야 한다. 1 2 3 4 git rm -r --cached . git add . git commit -m &#34;Apply .gitignore&#34; git push ]]></description>
</item>
</channel>
</rss>
