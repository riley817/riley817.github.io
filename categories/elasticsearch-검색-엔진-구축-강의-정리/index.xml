<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Elasticsearch 검색 엔진 구축 강의 정리 - Category - Riley&#39;s DevLog</title>
        <link>https://riley817.github.io/categories/elasticsearch-%EA%B2%80%EC%83%89-%EC%97%94%EC%A7%84-%EA%B5%AC%EC%B6%95-%EA%B0%95%EC%9D%98-%EC%A0%95%EB%A6%AC/</link>
        <description>Elasticsearch 검색 엔진 구축 강의 정리 - Category - Riley&#39;s DevLog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>riley0422@icloud.com (Riley)</managingEditor>
            <webMaster>riley0422@icloud.com (Riley)</webMaster><lastBuildDate>Sat, 27 Oct 2018 13:11:45 &#43;0900</lastBuildDate><atom:link href="https://riley817.github.io/categories/elasticsearch-%EA%B2%80%EC%83%89-%EC%97%94%EC%A7%84-%EA%B5%AC%EC%B6%95-%EA%B0%95%EC%9D%98-%EC%A0%95%EB%A6%AC/" rel="self" type="application/rss+xml" /><item>
    <title>Elasticsearch 기본 동작</title>
    <link>https://riley817.github.io/elasticsearch-lecture4/</link>
    <pubDate>Sat, 27 Oct 2018 13:11:45 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/elasticsearch-lecture4/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/posts/images/elastic/9SyGqYLhMmYxEJyNUf.png" referrerpolicy="no-referrer">
            </div>인덱스 생성, 삭제 및 조회하기 1. 인덱스 생성하기 인덱스는 문서document의 모음이다. 인덱스를 생성하는 방법 Index Settings를 정의한다. Index Mappings를 정의한다. 사용자 정의된 도큐먼트를 인덱싱한다. 2. 인덱스의 settings Static Index Settings index.number_of_shards : 인덱스가 가져야 하는 Primary 샤드의 개수 설정. 기본값 5 Dynamic Index Settings index.number_of_replicas : 각 기본 샤드의 복제본 (Replica 샤드 개수 설정). 기본값은 1 index.refresh_interval : 검색 commit point 를 만드는 refresh interval 설정 (새로 고침 작업수행 빈도). -1 비활성화.]]></description>
</item>
<item>
    <title>Elasticsearch 및 Kibana 설치</title>
    <link>https://riley817.github.io/elasticsearch-lecture3/</link>
    <pubDate>Sun, 21 Oct 2018 19:20:11 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/elasticsearch-lecture3/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/posts/images/elastic/9SyGqYLhMmYxEJyNUf.png" referrerpolicy="no-referrer">
            </div>Elasticsearch 설치하기 Elasticsearch 는 Java 언어로 이루어진 아파치 Lucene 기반으로 이루어져 있다. 그러므로 설치를 위해서는 Java 가 먼저 설치되어 있어야 한다.
1. yum 으로 설치하기 RPM Repository 등록하기 /etc/yum.repos.d/elasticsearch.repo elastic 저장소를 수동으로 추가 한다.
1 2 3 4 5 6 7 8 9 # /etc/yum.repos.d/elasticsearch.repo [elasticsearch-6.x] name=Elasticsearch repository for 6.x packages baseurl=https://artifacts.elastic.co/packages/6.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md 1 sudo yum install elasticsearch RPM Download 하여 설치하기 Elasticsearch RPM 다운로드 후 설치한다.]]></description>
</item>
<item>
    <title>Elasticsearch 개념 및 용어정리 - Inverted Index, Segment</title>
    <link>https://riley817.github.io/elasticsearch-lecture2/</link>
    <pubDate>Sat, 20 Oct 2018 19:58:39 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/elasticsearch-lecture2/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/posts/images/elastic/9SyGqYLhMmYxEJyNUf.png" referrerpolicy="no-referrer">
            </div>Inverted Index 전통적인 데이터베이스는 필드당 하나의 값을 저장하기 때문에 전체 텍스트 검색에는 적합하지 않다. 즉 다중 값을 색인화 할 수 있어야 하는데, Elasticsearch 에서는 Inverted Index 형태의 인덱싱을 통해 Full-text Search 가 가능하도록 했다. 모든 문서에서 발생하는 모든 고유 값 또는 용어의 정렬된 목록을 포함하며, 각 용어에 대해 이를 포함하는 모든 문서 목록을 표시한다.
Full-text Search (전체 텍스트 검색) 는 요청한 모든 단어를 문서 또는 데이터베이스에서 모든 단어와 비교하는 포괄적 인 검색 방법이다.]]></description>
</item>
<item>
    <title>Elasticsearch 클러스터 분산구성 시나리오</title>
    <link>https://riley817.github.io/elasticsearch-lecture1/</link>
    <pubDate>Sat, 20 Oct 2018 19:00:11 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/elasticsearch-lecture1/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/posts/images/elastic/9SyGqYLhMmYxEJyNUf.png" referrerpolicy="no-referrer">
            </div>Elasticsearch 클러스터 분산구성 시나리오 단일 노드에 3개의 샤드로 클러스터 구성하기 blogs라는 인덱스에 3개의 primary 샤드와 1개의 replica 샤드가 운용되도록 할당한다.
1 2 3 4 5 6 7 curl -X PUT &#34;localhost:9200/blogs&#34; -H &#39;Content-Type: application/json&#39; -d { &#34;settings&#34; : { &#34;number_of_shards&#34; : 3, &#34;number_of_replicas&#34; : 1 } } [그림1] 샤드의 개수는 3이고 레플리카 개수는 1개인 단일 노드 클러스터는 정상적으로 작동되나 하드웨어의 오류가 발생할 경우 데이터 손실의 위험이 있다. 데이터 적재량이 많을 경우 싱글노드가 허용하는 볼륨을 모두 소진할 수도 있어 더이상 적재가 불가능 할 수도 있다.]]></description>
</item>
<item>
    <title>Elasticsearch 시작하기</title>
    <link>https://riley817.github.io/elasticsearch-lecture0/</link>
    <pubDate>Thu, 18 Oct 2018 14:10:52 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/elasticsearch-lecture0/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/posts/images/elastic/9SyGqYLhMmYxEJyNUf.png" referrerpolicy="no-referrer">
            </div>Elasticsearch Elasticsearch 는 Apache Lucene 기반의 Full-Text 검색엔진 이며 분석엔진 이다. 고가용성(High Availability) 의 확장 가능한 오픈 소스이다. HTTP 웹 인터페이스와 스키마에서 자유로운 JSON 문서로 제공된다. 검색 엔진으로서의 Elasticsearch Elasticsearch 는 루씬 기반의 대중적인 엔터프라이즈 검색엔진으로, Apach 2.0 License 에 의거 오픈 소스로 출시 되었다. 또한 대부분의 루씬이 제공하는 기능들을 Eleasticsearch 에서도 제공한다. HTTP Web Interface와 Schema에 자유로운 JSON 형태의 도규먼트를 지원하는 준 실시간 분산형 검색엔진이다.
Apache Lucene 정보검색(Information Retrieval, IR) 소프트웨어 검색 라이브러리 Apahce Software 재단의 검색엔진 상위 프로젝트 자바 언어로 개발되어 있다.]]></description>
</item>
</channel>
</rss>
