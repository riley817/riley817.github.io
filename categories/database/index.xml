<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Database - Category - Riley&#39;s DevLog</title>
        <link>https://riley817.github.io/categories/database/</link>
        <description>Database - Category - Riley&#39;s DevLog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>riley0422@icloud.com (Riley)</managingEditor>
            <webMaster>riley0422@icloud.com (Riley)</webMaster><lastBuildDate>Fri, 23 Apr 2021 16:44:26 &#43;0900</lastBuildDate><atom:link href="https://riley817.github.io/categories/database/" rel="self" type="application/rss+xml" /><item>
    <title>Oracle Scheduler DBMS_SCHEDULER 개념 및 사용법</title>
    <link>https://riley817.github.io/oracle-scheduler/</link>
    <pubDate>Fri, 23 Apr 2021 16:44:26 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/oracle-scheduler/</guid>
    <description><![CDATA[Oracle Scheduler - DBMS_SCHEDULER 오라클에서 정해진 시간에 반복된 작업을 수행하기 위해 DBMS_JOB 패키지를 활용하였지만 Oracle 10g 부터는 좀 더 확장된 기능을 가진 DBMS_SCHEDULER 패키지를 제공하고 있다. DBMS_JOB과의 가장 큰 차이점은 DBMS_JOB에서는 불가능하던 외부스크립트 (프로시저나, 함수 이외에도 OS에서 생성된 각종 유틸, 프로그램 까지) 실행이 가능하다. Class 생성 클래스를 지정하지 않게 되면 DEFAULT_JOB_CLASS 에 포함되는데 이 경우 기본 로깅 정책을 따른다. 기본로깅 정책은 DBMS_SCHEDULER.LOGGING_RUNS 이며 로깅레벨을 별도로 설정하거나 다른 스케쥴잡과 그룹화하여 관리하고 싶을 경우 Class를 생성한다.]]></description>
</item>
</channel>
</rss>
