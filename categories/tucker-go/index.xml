<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>tucker-go - Category - Riley&#39;s DevLog</title>
        <link>https://riley817.github.io/categories/tucker-go/</link>
        <description>tucker-go - Category - Riley&#39;s DevLog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>riley0422@icloud.com (Riley)</managingEditor>
            <webMaster>riley0422@icloud.com (Riley)</webMaster><lastBuildDate>Wed, 27 Apr 2022 17:51:49 &#43;0900</lastBuildDate><atom:link href="https://riley817.github.io/categories/tucker-go/" rel="self" type="application/rss+xml" /><item>
    <title>[Tucker의 Go 프로그래밍] 19. Go 인터페이스</title>
    <link>https://riley817.github.io/archives/tucker-go/chapter19-interface/</link>
    <pubDate>Wed, 27 Apr 2022 17:51:49 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/archives/tucker-go/chapter19-interface/</guid>
    <description><![CDATA[Tucker의 Go 언어 프로그래밍 책 내용을 정리하였습니다.
1. 인터페이스 정의 인터페이스 선언 인터페이스 선언은 type을 쓴 뒤 인터페이스 명을 쓰고 interface 키워드를 쓴다. 그런 뒤 {} 블록 안에 인터페이스에 포함된 메서드 집합을 써준다. 1 2 3 4 type DuckInterface interface { Fly() Walk(distance int) int } 유의사항 메서드는 반드시 메서드명이 있어야한다. 매개변수와 반환이 다르더라도 이름이 같은 메서드는 있을 수 없다. 인터페이스에서는 메서드 구현을 포함하지 않는다. 인터페이스 선언 예제 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 package main import &#34;fmt&#34; type Stringer interface { String() string } type Student struct { Name string Age int } func (s Student) String() string { return fmt.]]></description>
</item>
<item>
    <title>[Tucker의 Go 프로그래밍] 18. 슬라이스</title>
    <link>https://riley817.github.io/archives/tucker-go/chapter18-slice/</link>
    <pubDate>Tue, 26 Apr 2022 14:50:36 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/archives/tucker-go/chapter18-slice/</guid>
    <description><![CDATA[Tucker의 Go 언어 프로그래밍 책 내용을 정리하였습니다.
슬라이스는 Go에서 제공하는 동적 배열 타입이다. 동적 배열은 실행 도중 배열의 사이즈가 계속 바뀔 수 있다.
정적, 동적 상수와 변수의 차이를 생각하면 간단하다.
정적(static) : compile time, build time 시 값이 결정된다. 실행 도중에 절대 바뀔 수 없다. 동적(dynamic) : Runtime. 프로그램 실행 도중에 계속 값이 바뀔 수 있다. 다른언어에서 slice와 비슷한 개념 (동일하지는 않다.) C++ : Vector&lt;int&gt; Java : ArrayList Python : slice Javascript : 기본적으로 동적 배열 1.]]></description>
</item>
</channel>
</rss>
