<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Riley&#39;s DevLog</title>
        <link>https://riley817.github.io/posts/</link>
        <description>All Posts | Riley&#39;s DevLog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>riley0422@icloud.com (Riley)</managingEditor>
            <webMaster>riley0422@icloud.com (Riley)</webMaster><lastBuildDate>Sat, 19 Aug 2023 10:54:03 &#43;0900</lastBuildDate><atom:link href="https://riley817.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>가상 면접 사례로 배우는 대규모 시스템 설계 기초 Study [7장] 분산 시스템을 위한 유일 ID 생성기 설계</title>
    <link>https://riley817.github.io/chapter7/</link>
    <pubDate>Sat, 19 Aug 2023 10:54:03 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/chapter7/</guid>
    <description><![CDATA[Note 팀 내에서 진행하는 Study 정리 입니다. 함께 논의 하고 싶은 주제 다중 마스터 복제에서 언젠가는 값이 중복되지 않을까 하는데 어떻게 생각하시나요? 트위터 스노플레이크는 서버 갯수가 동적으로 줄었다가 늘었다가 하면 적용이 불가능한 걸까요? UUID는 신기하당 요약 1. 문제 이해 및 설계 범위 확정 ID는 유일 해야 한다. ID는 숫자로만 구성되어야 한다. ID는 64비트로 표현 ID는 발급 날짜에 따라 정렬 가능해야 한다. 초당 10,000 개의 ID를 만들 수 있어야 한다. 2.]]></description>
</item>
<item>
    <title>가상 면접 사례로 배우는 대규모 시스템 설계 기초 Study [6장] 키-값 저장소 설계</title>
    <link>https://riley817.github.io/chapter6/</link>
    <pubDate>Sat, 19 Aug 2023 02:03:19 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/chapter6/</guid>
    <description><![CDATA[Note 팀 내에서 진행하는 Study 정리 입니다. 함께 논의 하고 싶은 주제 분산 시스템에서 어떤 노드가 최신의 데이터를 갖고 있는지 어떻게 판단할지 요약 키 값 저장소 키-값 데이터베이스라고도 하며 비 관계형 데이터베이스이다. 고유 식별자identifier를 키로 설정하며 키는 유일해야하고 키에 매달린 값은 키를 통해서만 접근 가능하다. 키는 짧을 수록 좋다. 값은 문자열, 리스트, 객체 등 어떤 값이 오든 상관없다. 아마존 다이나모, memcached, 레디스 등 1. 문제 이해 및 설계 범위 확정 읽기, 쓰기 그리고 메모리 사용량 사이 균형을 찾고 데이터 일관성과 가용성 사이에 타협점을 찾는 설계를 한다]]></description>
</item>
<item>
    <title>가상 면접 사례로 배우는 대규모 시스템 설계 기초 Study [5장] 안정 해시 설계</title>
    <link>https://riley817.github.io/chapter5/</link>
    <pubDate>Sat, 19 Aug 2023 01:18:15 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/chapter5/</guid>
    <description><![CDATA[Note 팀 내에서 진행하는 Study 정리 입니다. 함께 논의 하고 싶은 주제 챕터가 점점 어려워 집니다. 해시 키가 저장되는 서버를 탐색할 때 왜 시계방향으로 탐색을 했을지 문득 궁금해지네요? 성능과 메모리 두 개의 밸런스를 타협하는 결정은 어려워 보입니다. 이번 챕터의 내용을 떠나서 웹 서비스에 대한 튜닝 노하우 같은 게 있으신가요? (요청 제한 등등 인프라적으로 모든 것들) 서비스의 메모리 설정 등등 어떠한 근거를 통해 설정하고 어떤 데이터를 참고하는지요? (예를 들어 부하 테스트를 통해 예측 한다 등) 핫스팟 키 문제를 어떻게 해결하는지 자세한 설명이 있었으면 좋았었을 것 같습니다&hellip; 특정 유명인의 데이터를 예로 들었는데 만약 인덱스 키가 아닌 데이터 때문에 접근 빈도수가 높아지면 키를 재 배치 할 수 있을지?]]></description>
</item>
<item>
    <title>가상 면접 사례로 배우는 대규모 시스템 설계 기초 Study [4장] 처리율 제한 장치의 설계</title>
    <link>https://riley817.github.io/chapter4/</link>
    <pubDate>Wed, 16 Aug 2023 22:25:30 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/chapter4/</guid>
    <description><![CDATA[Note 팀 내에서 진행하는 Study 정리 입니다. 함께 논의 하고 싶은 주제 우리 서비스 경우도 사용자 인증을 위해 여러 MSA 서버에서 하나의 인증 서비스를 의존하고 있습니다. 미들웨어를 도입하면 좋을 것 같아요. 이전에 API 게이트 서비스를 개발해두었던 것 같은데 &hellip;
우리 서비스에는 어떠한 처리율 제한 장치가 있을까요? (인프라 적으로 모든) 깊게 물어본적이 없는 것 같아 반성해 봅니다&hellip;
토큰 버킷 알고리즘에서 IP 주소별로 처리율 제한이 필요하면 IP 주소마다 버킷을 하나씩 할당하게 되면 버킷이 엄청 많아질텐데&hellip;]]></description>
</item>
<item>
    <title>가상 면접 사례로 배우는 대규모 시스템 설계 기초 Study [3장] 시스템 설계 면접 공략법</title>
    <link>https://riley817.github.io/chapter3/</link>
    <pubDate>Sat, 12 Aug 2023 14:32:30 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/chapter3/</guid>
    <description><![CDATA[Note 팀 내에서 진행하는 Study 정리 입니다. 함께 논의하고 싶은 주제 면접관이 되었을 때 주로 어떤 질문들을 하시나요? 혹은 받아본 질문 중 기억에 남는 질문 면접자가 되었을 때 어떤 질문을 해야 어필을 할 수 있나요? 요약 해당 장은 면접 뿐만아니라 평소 시스템 설계를 할 때 중요한 사항들인 것 같다.
문제 이해 및 설계 범위 확정 요구사항을 완전히 이해하지 않고 답을 내놓는 행위는 좋지 않다. -&gt; 깊이 생각하고 요구사항과 가정을 분명히 하자 요구사항에 대한 질문 예시 구체적으로 어떤 기능들을 만들어야 하나?]]></description>
</item>
<item>
    <title>가상 면접 사례로 배우는 대규모 시스템 설계 기초 Study [2장] 개략적인 규모 추정</title>
    <link>https://riley817.github.io/chapter2/</link>
    <pubDate>Sat, 12 Aug 2023 13:41:30 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/chapter2/</guid>
    <description><![CDATA[Note 팀 내에서 진행하는 Study 정리 입니다. 함께 논의하고 싶은 주제 SNS 서비스인 우리 서비스는 DAU(Daily active users)를 산출하고 싶습니다. 우리 회사의 서비스의 활성유저는 어떻게 정의 할 수있을까요? 요약 2의 제곱수 볼륨의 단위를 2의 제곱수로 표현하면 어떻게 되는지 알아야 한다. 흔히 쓰이는 데이터 볼륨 단위
2의제곱 근사치 이름 축약형 10 1천만(thousand) 1킬로바이트(Kilobyte) 1KB 20 1백만(milion) 1메가바이트(Megabyte) 1MB 30 10억(bilion) 1기가바이트(Gigabyte) 1GB 40 1조(trilion) 1테라바이트(Terabyte) 1TB 50 1000조(quadrilion) 1페타바이트(Petabyte) 1PB 모든 프로그래머가 알아야 하는 응답 지연 값 이들 가운데 몇몇은 더 빠른 컴퓨터가 등장하면서 유효하지 않게 되었지만 아직도 이 수치들은 컴퓨터 연산들의 처리 속도가 어느 정도인지 짐작할 수 있도록 해준다.]]></description>
</item>
<item>
    <title>가상 면접 사례로 배우는 대규모 시스템 설계 기초 Study [1장] 사용자 수에 따른 규모 확장성</title>
    <link>https://riley817.github.io/chapter1/</link>
    <pubDate>Thu, 10 Aug 2023 09:43:42 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/chapter1/</guid>
    <description><![CDATA[Note 팀 내에서 진행하는 Study 정리 입니다. 함께 논의하고 싶은 주제 우리 서비스의 검색기능은 아직 없지만 인스타그램처럼 태그, 유저, 장소 등 통합 검색 기능이 추가되면 어떤 구조를 가져가면 좋을까요? 요약 단일서버 모든 컴포넌트가 단 한대의 서버에서 실행되는 간단한 시스템
도메인 이름을 이용하여 웹사이트에 접속. 도메인 이름은 도메인 이름 서비스(Domain Name Service, DNS)에 질의하여 IP 주소 반환 DNS 질의 결과로 IP 반환 IP 주소로 HTTPHyperText Transfer Protocol 요청이 전달 요청을 받은 웹 서버는 HTML 페이지 JSON 형태의 응답을 반환 데이터베이스 관계형 데이터베이스(Relational Data-base Management System, RDBMS)가 개발자들에게는 익숙하고 오랜기간 동안 잘 사용되어진 시스템이지만 구축하려는 시스템에 따라 꼭 최선의 시스템은 아닐 수 있다.]]></description>
</item>
<item>
    <title>[Go 언어를 활용한 네트워크 프로그래밍] 3. 신뢰성 있는 TCP 데이터 스트림</title>
    <link>https://riley817.github.io/network-programming-with-go-copy/</link>
    <pubDate>Mon, 10 Apr 2023 23:24:37 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/network-programming-with-go-copy/</guid>
    <description><![CDATA[Go 언어를 활용한 네트워크 프로그래밍 책 정리
TCP를 신뢰성 있게 만드는 것 패킷손실packet loss : 무선 네트워크 간섭이나 네트워크 정체 등의 이유로 데이터가 전송에 실패하여 목적지까지 도달하지 못한 경우 발생 네트워크 정체network congestion : 네트워크의 연결상 처리할 수 있는 양 이상의 데이터를 전송하려 할 때 발생 TCP는 흐름제어 flow control 절차를 통해 데이터의 전송 속도를 조정하여 네트워크의 상태가 변경되더라도 손실된 패킷을 최소로 유지하면서 데이터를 빠르게 전송할 수 있다. TCP는 수신한 패킷을 추적하고, 승인되지 않은 패킷은 필요에 따라 재전송 한다.]]></description>
</item>
<item>
    <title>[Go 언어를 활용한 네트워크 프로그래밍] 1. 네트워크 시스템 개요</title>
    <link>https://riley817.github.io/network-programming-with-go/</link>
    <pubDate>Tue, 07 Mar 2023 21:27:33 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/network-programming-with-go/</guid>
    <description><![CDATA[Go 언어를 활용한 네트워크 프로그래밍 책 정리
컴퓨터 네트워크(coumputer network) 란 두 개 이상의 장치 또는 노드간의 연결을 말한다.
네트워크 토폴로지 유형 네트워크 토폴로지topology 란 네트워크상의 노드의 구성을 말한다. 토폴로지의 유형은 점대점 연결형, 데이지 체인형, 버스형, 링형, 스타형, 그물형의 6가지 기본 범주로 나뉜다.
1. 점대점 point-to-point 연결형 두 노드가 하나의 연결을 공유 한다. 이러한 유형의 네트워크 연결을 드물지만 두 노드 간에 직접 통신이 필요할 때 매우 유용하다. 2. 데이지 체인 daisy chain 연결형 일련의 점대점 연결 출발지 노드와 목적지 노드 사이의 중간 노드를 일반적으로 홉이라고 한다.]]></description>
</item>
<item>
    <title>[Flutter] Flutter 개념 및 동작 원리</title>
    <link>https://riley817.github.io/flutter/</link>
    <pubDate>Thu, 16 Feb 2023 16:11:36 &#43;0900</pubDate>
    <author>riley</author>
    <guid>https://riley817.github.io/flutter/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/posts/images/banner/flutter-logo.png" referrerpolicy="no-referrer">
            </div>플러터 구글에서 개발한 공개 모바일 SDK 이다. 모바일 앱을 만들기 위한 기존 방식은 안드로이드와 IOS를 별도로 구현하여 배포해야했기에 요구되는 기술 스펙과 비용이 컸으나 플러터를 사용하면 한번의 구현으로 배포가 가능하다. 플러터는 렌터링 엔진, UI 컴포넌트, 테스트 프레임워크, 도구, 라우터 등 앱 제작에 필요한 기능을 모두 제공하므로 개발자는 앱 구현에 집중하여 생산성을 높일 수 있다.
플러터가 Dart 언어를 사용하는 이유 다트는 JIT(just-in-time), AOT(ahead-of-time) 컴파일을 모두 지원한다. AOT 컴파일러는 다트 코드를 효율적인 네이티브 코드로 바꾸어 개발자 및 사용자가 모두 빠르게 사용할 수 있다.]]></description>
</item>
</channel>
</rss>
